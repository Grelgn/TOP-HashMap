(()=>{"use strict";const e=new class{constructor(){this.bucketSize=16,this.buckets=new Array(this.bucketSize).fill(null),this.loadFactor=.75}hash(e){let t=0;for(let s=0;s<e.length;s++)t=31*t+e.charCodeAt(s),t%=this.bucketSize;return t}set(e,t){const s=this.hash(e);this.buckets[s]={[e]:t}}get(e){const t=this.hash(e);return this.buckets[t]}has(e){const t=this.hash(e);return null!=this.buckets[t]}remove(e){if(this.has(e)){const t=this.hash(e);return this.buckets[t]=null,!0}return!1}length(){let e=0;for(let t=0;t<this.buckets.length;t++)null!=this.buckets[t]&&e++;return e}clear(){for(let e=0;e<this.buckets.length;e++)this.buckets[e]=null}keys(){const e=[];for(let t=0;t<this.buckets.length;t++)null!=this.buckets[t]&&e.push(Object.keys(this.buckets[t]));return e}values(){const e=[];for(let t=0;t<this.buckets.length;t++)null!=this.buckets[t]&&e.push(Object.values(this.buckets[t]));return e}entries(){const e=[];for(let t=0;t<this.buckets.length;t++)null!=this.buckets[t]&&e.push(Object.entries(this.buckets[t]));return e}},t=e.hash("hello");console.log(t),e.set("key","value"),console.log(e.buckets),console.log(e.get("key")),console.log(e.has("key")),console.log(e.has("notkey")),e.set("test","123"),e.set("testing","345"),console.log(e.buckets),console.log(e.remove("testing")),console.log(e.remove("apple")),console.log(e.buckets),console.log(e.length()),console.log(e.keys()),console.log(e.values()),console.log(e.entries()),e.clear(),console.log(e.buckets)})();